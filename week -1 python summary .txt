
Basics of python summary :-

Python is a great general-purpose programming language on its own, but with the help of a few popular libraries (numpy, scipy, matplotlib) 
it becomes a powerful environment for scientific computing.

 Insatllation of Jupyter and colab Notebooks

 ---> A Jupyter notebook lets you write and execute Python code locally in your web browser. 
 ---> Jupyter notebooks make it very easy to tinker with code and execute it in bits and pieces; for this reason they are widely used in scientific computing. 
 ---> Colab on the other hand is Googleâ€™s flavor of Jupyter notebooks that is particularly suited for machine learning and data analysis and that runs entirely in the cloud. 
 
 Data types present in python :-
 
 Python contains the following inbuilt data types
1. int
2. float
3.complex
4.bool
5.str
6.bytes
7.bytearray
8.range
9.list
10.tuple
11.set
12.frozenset
13.dict
14.None

-----------------------------------------------------------------------------------------------
Containers :- 

Python includes several built-in container types: lists, dictionaries, sets, and tuples.


       1  Lists
          * list To represent an ordered collection of objects
          * Mutable 
          >>> l=[10,11,12,13,14,15]
          >>> type(l)
          <class 'list'>

          -> Slicing: In addition to accessing list elements one at a time, Python provides concise syntax to access sublists; this is known as slicing

       2  Tuple
          * Tuple To represent an ordered collections of objects
          * Immutable 

          >>> t=(1,2,3,4,5)
          >>> type(t)
          <class 'tuple'>

       3  Set

          * set To represent an unordered collection of unique objects
          * Mutable 
          >>> s={1,2,3,4,5,6}
          >>> type(s)
         <class 'set'>

       4  Dictionaries

          * A dictionary stores (key, value) pairs, similar to a Map in Java or an object in Javascript
          * Mutable >>>
          d={101:'durga',102:'ramu',103:'hari'}
          >>> type(d)
          <class 'dict'>

-------------------------------------------------------------------------------------------------------------

operators present in python :-
Operator is a symbol that performs certain operations.
Python provides the following set of operators
1. Arithmetic Operators
2. Relational Operators or Comparison Operators
3. Logical operators
4. Bitwise oeprators
5. Assignment operators
6. Special operators
-----------------------------------------------------------------------------------------------------------

Functions ----> Python functions are defined using the def keyword
Classes   ----> The syntax for defining classes in Python is straightforward

Python is an ocean of libraries that serve various purposes
Top 10 Python Libraries are:
Pandas
Numpy
SciPy
TensorFlow
Scikit-Learn
Keras
PyTorch
LightGBM
Eli5
Theano

-------------------------------------------------------------------------------------------
Numpy


Numpy is the core library for scientific computing in Python. 
It provides a high-performance multidimensional array object, and tools for working with these arrays. 
Numpy is considered as one of the most popular machine learning library in Python.
TensorFlow and other libraries uses Numpy internally for performing multiple operations on Tensors. 
Array interface is the best and the most important feature of Numpy.

Features Of Numpy :- 

Interactive: Numpy is very interactive and easy to use.
Mathematics: Makes complex mathematical implementations very simple.
Intuitive: Makes coding real easy and grasping the concepts is easy.
Lot of Interaction: Widely used, hence a lot of open source contribution.

Uses of Numpy?
This interface can be utilized for expressing images, sound waves, and other binary raw streams as an array of real numbers in N-dimensional.
For implementing this library for machine learning having knowledge of Numpy is important for full stack developers.


Arrays

A numpy array is a grid of values, all of the same type, and is indexed by a tuple of nonnegative integers. 
The number of dimensions is the rank of the array; the shape of an array is a tuple of integers giving the size of the array along each dimension.
We can initialize numpy arrays from nested Python lists, and access elements using square brackets:
Numpy also provides many functions to create arrays

Array indexing:-
Numpy offers several ways to index into arrays.

--->Slicing: Similar to Python lists, numpy arrays can be sliced. Since arrays may be multidimensional, we must specify a slice for each dimension of the array

Datatypes

--> Every numpy array is a grid of elements of the same type. Numpy provides a large set of numeric datatypes that you can use to construct arrays. 
Numpy tries to guess a datatype when we create an array, but functions that construct arrays usually also include an optional argument to explicitly specify the datatype.

Array math

--> Basic mathematical functions operate elementwise on arrays, and are available both as operator overloads and as functions in the numpy module

Broadcasting

--> Broadcasting is a powerful mechanism that allows numpy to work with arrays of different shapes when performing arithmetic operations. 
Frequently we have a smaller array and a larger array, and we want to use the smaller array multiple times to perform some operation on the larger array.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
SciPy

--> SciPy is a machine learning library for application developers and engineers.
--> SciPy library contains modules for optimization, linear algebra, integration, and statistics.


Features Of SciPy :-

The main feature of SciPy library is that it is developed using NumPy, and its array makes the most use of NumPy.
In addition, SciPy provides all the efficient numerical routines like optimization, numerical integration, and many others using its specific submodules.


Applications of SciPy :-

SciPy is a library that uses NumPy for the purpose of solving mathematical functions. 
SciPy uses NumPy arrays as the basic data structure, and comes with modules for various commonly used tasks in scientific programming.
Tasks including linear algebra, integration (calculus), ordinary differential equation solving and signal processing execute easily by SciPy.

Image operations:- 
SciPy provides some basic functions to work with images. 
For example, it has functions to read images from disk into numpy arrays, to write numpy arrays to disk as images, and to resize images.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Pandas


Pandas is a machine learning library in Python that provides data structures of high-level and a wide variety of tools for analysis. 
One of the great feature of this library is the ability to translate complex operations with data using one or two commands. 
Pandas have so many inbuilt methods for grouping, combining data, and filtering, as well as time-series functionality.

Features Of Pandas:- 
Pandas make sure that the entire process of manipulating data will be easier.
Support for operations such as Re-indexing, Iteration, Sorting, Aggregations, Concatenations and Visualizations are among the feature highlights of Pandas.

Applications of Pandas:- 
Currently, there are fewer releases of pandas library which includes hundred of new features, bug fixes, enhancements, and changes in API. 
The improvements in pandas regards its ability to group and sort data, select best suited output for the apply method, and provides support for performing custom types operations.

Data Analysis among everything else takes the highlight when it comes to usage of Pandas. 
But, Pandas when used with other libraries and tools ensure high functionality and good amount of flexibility.




These are the basics i had learneed and summarised and finnaly i also concluding the python libraries for good understanding

Python Libraries :-

Python has libraries with large collections of mathematical functions and analytical tools
* Pandas - This library is used for structured data operations, like import CSV files, create dataframes, and data preparation
* Numpy - This is a mathematical library. Has a powerful N-dimensional array object, linear algebra, Fourier transform, etc.
* Matplotlib - This library is used for visualization of data.
* SciPy - This library has linear algebra modules



                                                                       ###THE END ###


